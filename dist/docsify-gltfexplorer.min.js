!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=3)}({3:function(e,t,r){"use strict";r.r(t);function n(e){var t=window.location.toString(),r=t.substring(0,t.lastIndexOf("/")+1);return e.replace(/\[\[\$((?:\.?\.\/)*)/g,(function(e,t){for(var n=(r+t).split("/"),o=[],i=0,l=n.length;i<l;i++){var c=n[i];".."===c?o.pop():"."!==c&&o.push(c)}return"[["+o.join("/")}))}var o=!1;function i(e,t,r){var i=window.Docsify.dom,l=i.create("span",e);return l.querySelectorAll?((i.findAll(l,t)||[]).forEach((function(e){var t=e.parentNode;if(!o){o=!0;var l=i.create("style","div.gltfExplorer::before { content: ''; position: absolute; box-shadow: inset 0px 0px 7px 0px #333; top: 0; right: 0; bottom: 0; left: 0; pointer-events: none; } div.gltfExplorer { position:relative; height: 80vh; }");t&&t.insertBefore(l,e)}var c=i.create("p",function(e,t){var r=n("docsify-iframe.min.js"),o=n(e);return`<div class="gltfExplorer" style="position:relative"><iframe srcdoc="${`<!DOCTYPE html><head><link href='${n("docsify-iframe.min.css")}' rel='stylesheet'/><script src='${r}'><\/script><body><div id='gltfExplorer' class='dark'><ul><li><a href='javascript:selectObject(false)'>Unselect</a></li></ul></div></body>\n    <script>  \n      window.onload = function() {\n        GLTFExplorer('gltfExplorer', [\n        {\n            src: '${o}',\n            ghosted: ${"ghosted"in t&&t.ghosted},\n            fixColors: ${"fixColors"in t&&t.fixColors},\n        }\n    ])}\n    <\/script>`}" style="height:100%;margin:0"/></div>`}(e.innerText,r));t&&(c.dataset.lang="gltf",e.parentNode.replaceChild(c,e))})),l.innerHTML):e}window.$docsify||(window.$docsify={}),window.$docsify.plugins=(window.$docsify.plugins||[]).concat((function(e,t){const r=Object.assign({},{colorize:!1},t.config.gltfexplorer);e.afterEach((function(e){return i(e,'pre[data-lang="gltf"]',r)}))}))}});